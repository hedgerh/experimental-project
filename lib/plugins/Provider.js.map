{"version":3,"sources":["../../src/plugins/Provider.js"],"names":["_getName","id","split","map","s","charAt","toUpperCase","slice","join","Provider","opts","provider","name","fetch","host","method","credentials","headers","then","res","json","payload","isAuthenticated","directory","redirect","location","href"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,WAAW,SAAXA,QAAW,CAACC,EAAD,EAAQ;AACvB,SAAOA,GAAGC,KAAH,CAAS,GAAT,EAAcC,GAAd,CAAkB;AAAA,WAAKC,EAAEC,MAAF,CAAS,CAAT,EAAYC,WAAZ,KAA4BF,EAAEG,KAAF,CAAQ,CAAR,CAAjC;AAAA,GAAlB,EAA+DC,IAA/D,CAAoE,GAApE,CAAP;AACD,CAFD;;IAIqBC,Q;AACnB,oBAAaC,IAAb,EAAmB;AAAA;;AACjB,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBD,KAAKC,QAArB;AACA,SAAKV,EAAL,GAAU,KAAKU,QAAf;AACA,SAAKC,IAAL,GAAY,KAAKF,IAAL,CAAUE,IAAV,IAAkBZ,SAAS,KAAKC,EAAd,CAA9B;AACD;;;;2BAEO;AACN,aAAOY,MAAS,KAAKH,IAAL,CAAUI,IAAnB,SAA2B,KAAKH,QAAhC,iBAAsD;AAC3DI,gBAAQ,KADmD;AAE3DC,qBAAa,SAF8C;AAG3DC,iBAAS;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT;AAHkD,OAAtD,EAQNC,IARM,CAQD,eAAO;AACX,eAAOC,IAAIC,IAAJ,GACNF,IADM,CACD,UAACG,OAAD,EAAa;AACjB,iBAAOA,QAAQC,eAAf;AACD,SAHM,CAAP;AAID,OAbM,CAAP;AAcD;;;2BAEyB;AAAA,UAApBC,SAAoB,yDAAR,MAAQ;;AACxB,aAAOV,MAAS,KAAKH,IAAL,CAAUI,IAAnB,SAA2B,KAAKH,QAAhC,kBAAqDY,SAArD,EAAkE;AACvER,gBAAQ,KAD+D;AAEvEC,qBAAa,SAF0D;AAGvEC,iBAAS;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT;AAH8D,OAAlE,EAQNC,IARM,CAQD;AAAA,eAAOC,IAAIC,IAAJ,EAAP;AAAA,OARC,CAAP;AASD;;;6BAEiC;AAAA,UAA1BI,QAA0B,yDAAfC,SAASC,IAAM;;AAChC,aAAOb,MAAS,KAAKH,IAAL,CAAUI,IAAnB,SAA2B,KAAKH,QAAhC,yBAA4Da,QAA5D,EAAwE;AAC7ET,gBAAQ,KADqE;AAE7EC,qBAAa,SAFgE;AAG7EC,iBAAS;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT;AAHoE,OAAxE,CAAP;AAQD;;;;;;kBA9CkBR,Q","file":"Provider.js","sourcesContent":["'use strict'\n\nconst _getName = (id) => {\n  return id.split('-').map(s => s.charAt(0).toUpperCase() + s.slice(1)).join(' ')\n}\n\nexport default class Provider {\n  constructor (opts) {\n    this.opts = opts\n    this.provider = opts.provider\n    this.id = this.provider\n    this.name = this.opts.name || _getName(this.id)\n  }\n\n  auth () {\n    return fetch(`${this.opts.host}/${this.provider}/authorize`, {\n      method: 'get',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application.json'\n      }\n    })\n    .then(res => {\n      return res.json()\n      .then((payload) => {\n        return payload.isAuthenticated\n      })\n    })\n  }\n\n  list (directory = 'root') {\n    return fetch(`${this.opts.host}/${this.provider}/list?dir=${directory}`, {\n      method: 'get',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => res.json())\n  }\n\n  logout (redirect = location.href) {\n    return fetch(`${this.opts.host}/${this.provider}/logout?redirect=${redirect}`, {\n      method: 'get',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n  }\n}\n"]}