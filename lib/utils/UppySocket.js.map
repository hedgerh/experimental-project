{"version":3,"sources":["../../src/utils/UppySocket.js"],"names":["UppySocket","opts","queued","isOpen","socket","WebSocket","target","emitter","EventEmitter","onopen","e","length","first","send","action","payload","slice","onclose","_handleMessage","bind","onmessage","close","emit","on","once","push","JSON","stringify","handler","message","parse","data","err","console","log"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEqBA,U;AACnB,sBAAaC,IAAb,EAAmB;AAAA;;AAAA;;AACjB,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,MAAL,GAAc,KAAd;AACA,SAAKC,MAAL,GAAc,IAAIC,SAAJ,CAAcJ,KAAKK,MAAnB,CAAd;AACA,SAAKC,OAAL,GAAe,IAAI,2BAAGC,YAAP,EAAf;;AAEA,SAAKJ,MAAL,CAAYK,MAAZ,GAAqB,UAACC,CAAD,EAAO;AAC1B,YAAKP,MAAL,GAAc,IAAd;;AAEA,aAAO,MAAKD,MAAL,CAAYS,MAAZ,GAAqB,CAArB,IAA0B,MAAKR,MAAtC,EAA8C;AAC5C,YAAMS,QAAQ,MAAKV,MAAL,CAAY,CAAZ,CAAd;AACA,cAAKW,IAAL,CAAUD,MAAME,MAAhB,EAAwBF,MAAMG,OAA9B;AACA,cAAKb,MAAL,GAAc,MAAKA,MAAL,CAAYc,KAAZ,CAAkB,CAAlB,CAAd;AACD;AACF,KARD;;AAUA,SAAKZ,MAAL,CAAYa,OAAZ,GAAsB,UAACP,CAAD,EAAO;AAC3B,YAAKP,MAAL,GAAc,KAAd;AACD,KAFD;;AAIA,SAAKe,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;;AAEA,SAAKf,MAAL,CAAYgB,SAAZ,GAAwB,KAAKF,cAA7B;;AAEA,SAAKG,KAAL,GAAa,KAAKA,KAAL,CAAWF,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKG,IAAL,GAAY,KAAKA,IAAL,CAAUH,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKI,EAAL,GAAU,KAAKA,EAAL,CAAQJ,IAAR,CAAa,IAAb,CAAV;AACA,SAAKK,IAAL,GAAY,KAAKA,IAAL,CAAUL,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKN,IAAL,GAAY,KAAKA,IAAL,CAAUM,IAAV,CAAe,IAAf,CAAZ;AACD;;;;4BAEQ;AACP,aAAO,KAAKf,MAAL,CAAYiB,KAAZ,EAAP;AACD;;;yBAEKP,M,EAAQC,O,EAAS;AACrB;;AAEA,UAAI,CAAC,KAAKZ,MAAV,EAAkB;AAChB,aAAKD,MAAL,CAAYuB,IAAZ,CAAiB,EAACX,cAAD,EAASC,gBAAT,EAAjB;AACA;AACD;;AAED,WAAKX,MAAL,CAAYS,IAAZ,CAAiBa,KAAKC,SAAL,CAAe;AAC9Bb,sBAD8B;AAE9BC;AAF8B,OAAf,CAAjB;AAID;;;uBAEGD,M,EAAQc,O,EAAS;AACnB,WAAKrB,OAAL,CAAagB,EAAb,CAAgBT,MAAhB,EAAwBc,OAAxB;AACD;;;yBAEKd,M,EAAQC,O,EAAS;AACrB,WAAKR,OAAL,CAAae,IAAb,CAAkBR,MAAlB,EAA0BC,OAA1B;AACD;;;yBAEKD,M,EAAQc,O,EAAS;AACrB,WAAKrB,OAAL,CAAaiB,IAAb,CAAkBV,MAAlB,EAA0Bc,OAA1B;AACD;;;mCAEelB,C,EAAG;AACjB,UAAI;AACF,YAAMmB,UAAUH,KAAKI,KAAL,CAAWpB,EAAEqB,IAAb,CAAhB;AACA,aAAKT,IAAL,CAAUO,QAAQf,MAAlB,EAA0Be,QAAQd,OAAlC;AACD,OAHD,CAGE,OAAOiB,GAAP,EAAY;AACZC,gBAAQC,GAAR,CAAYF,GAAZ;AACD;AACF;;;;;;kBArEkBhC,U","file":"UppySocket.js","sourcesContent":["import ee from 'namespace-emitter'\n\nexport default class UppySocket {\n  constructor (opts) {\n    this.queued = []\n    this.isOpen = false\n    this.socket = new WebSocket(opts.target)\n    this.emitter = new ee.EventEmitter()\n\n    this.socket.onopen = (e) => {\n      this.isOpen = true\n\n      while (this.queued.length > 0 && this.isOpen) {\n        const first = this.queued[0]\n        this.send(first.action, first.payload)\n        this.queued = this.queued.slice(1)\n      }\n    }\n\n    this.socket.onclose = (e) => {\n      this.isOpen = false\n    }\n\n    this._handleMessage = this._handleMessage.bind(this)\n\n    this.socket.onmessage = this._handleMessage\n\n    this.close = this.close.bind(this)\n    this.emit = this.emit.bind(this)\n    this.on = this.on.bind(this)\n    this.once = this.once.bind(this)\n    this.send = this.send.bind(this)\n  }\n\n  close () {\n    return this.socket.close()\n  }\n\n  send (action, payload) {\n    // attach uuid\n\n    if (!this.isOpen) {\n      this.queued.push({action, payload})\n      return\n    }\n\n    this.socket.send(JSON.stringify({\n      action,\n      payload\n    }))\n  }\n\n  on (action, handler) {\n    this.emitter.on(action, handler)\n  }\n\n  emit (action, payload) {\n    this.emitter.emit(action, payload)\n  }\n\n  once (action, handler) {\n    this.emitter.once(action, handler)\n  }\n\n  _handleMessage (e) {\n    try {\n      const message = JSON.parse(e.data)\n      this.emit(message.action, message.payload)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n}\n"]}